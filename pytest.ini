[tool:pytest]
# PyTest configuration for AbstractCore
# Ensures proper test discovery and execution for vision tests

[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    vision: Tests requiring vision capabilities
    provider_required: Tests requiring specific provider availability
    slow: Slow-running tests (use -m "not slow" to skip)
    comprehensive: Comprehensive vision tests across all models/images
    smoke: Quick smoke tests for basic functionality
    integration: Integration tests that test multiple components
    unit: Unit tests for individual components

# Output configuration
addopts =
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    -p no:cacheprovider

# Timeout for individual tests (in seconds)
timeout = 300

# Parallel execution (if pytest-xdist is installed)
# addopts = -n auto

# Test filtering examples:
# Run only vision tests: pytest -m vision
# Skip slow tests: pytest -m "not slow"
# Run only comprehensive tests: pytest -m comprehensive
# Run specific provider tests: pytest -k "ollama"
# Run single model tests: pytest tests/test_vision_single_model.py
# Run all vision tests: pytest tests/test_vision_comprehensive.py tests/test_vision_single_model.py

# Environment variables for testing
# VISION_MODEL=ollama/qwen2.5vl:7b pytest tests/test_vision_single_model.py::TestSpecificModel::test_env_model_all_images
# OPENAI_API_KEY=your_key pytest -m "vision" -k "openai"
# ANTHROPIC_API_KEY=your_key pytest -m "vision" -k "anthropic"